using ChausseeNeuve.Domain.Models;
using System;

namespace UI_ChausseeNeuve 
{ 
    public static class AppState 
    { 
        private static Project _currentProject = new Project();
        
        public static Project CurrentProject 
        { 
            get => _currentProject;
            set 
            {
                _currentProject = value;
                StructureChanged?.Invoke();
            }
        }
        
        public static string? CurrentFilePath { get; set; } = null;
        
        /// <summary>
        /// Événement déclenché quand la structure change
        /// </summary>
        public static event Action? StructureChanged;

        /// <summary>
        /// Nouvel évènement déclenché quand les valeurs admissibles sont recalculées/mises à jour
        /// (évite de reconstruire toute la structure côté résultats)
        /// </summary>
        public static event Action? ValeursAdmissiblesUpdated;
        
        /// <summary>
        /// Méthode pour déclencher manuellement la notification de changement de structure
        /// À appeler depuis StructureEditorViewModel quand une couche est modifiée
        /// </summary>
        public static void NotifyStructureChanged()
        {
            StructureChanged?.Invoke();
        }
        /// <summary>
        /// Méthode pour déclencher manuellement la notification de changement de structure
        /// </summary>
        public static void OnStructureChanged()
        {
            StructureChanged?.Invoke();
        }

        /// <summary>
        /// Déclenche l'événement ValeursAdmissiblesUpdated (rafraîchissement ciblé des colonnes Val. Adm.)
        /// </summary>
        public static void RaiseValeursAdmissiblesUpdated()
        {
            ValeursAdmissiblesUpdated?.Invoke();
        }
    } 
}
