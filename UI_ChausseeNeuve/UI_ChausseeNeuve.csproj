<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows</TargetFramework>
    <UseWPF>true</UseWPF>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <!-- Force x64 architecture to match native DLL -->
    <PlatformTarget>x64</PlatformTarget>
    <Platforms>x64</Platforms>
  </PropertyGroup>
  <ItemGroup>
    <Resource Include="Resources\**\*.*" />
    <ProjectReference Include="..\ChausseeNeuve.Domain\ChausseeNeuve.Domain.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Data\*.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Page Remove="Resources\Theme.xaml" />
  </ItemGroup>
  <ItemGroup>
    <Resource Update="Resources\Theme.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Resource>
  </ItemGroup>
  
  <!-- Native DLL deployment configuration -->
  <ItemGroup>
    <None Include="..\PavementCalculationEngine\build-dll\bin\PavementCalculationEngine.dll">
      <Link>PavementCalculationEngine.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  
  <!-- Ensure native DLL is copied after build -->
  <Target Name="CopyNativeDLL" AfterTargets="Build">
    <Copy 
      SourceFiles="..\PavementCalculationEngine\build-dll\bin\PavementCalculationEngine.dll"
      DestinationFolder="$(OutDir)"
      SkipUnchangedFiles="true"
      Condition="Exists('..\PavementCalculationEngine\build-dll\bin\PavementCalculationEngine.dll')" />
    <Message Text="Copied native DLL to $(OutDir)" Importance="high" 
             Condition="Exists('..\PavementCalculationEngine\build-dll\bin\PavementCalculationEngine.dll')" />
    <Warning Text="Native DLL not found at ..\PavementCalculationEngine\build-dll\bin\PavementCalculationEngine.dll" 
             Condition="!Exists('..\PavementCalculationEngine\build-dll\bin\PavementCalculationEngine.dll')" />
  </Target>
</Project>
